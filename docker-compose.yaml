version: "3.8"

services:

  redis:
    image: redis:7.0.5
    ports:
      - "6379:6379"

  mongoDB:
    image: mongo:6.0.2
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USERNAME:?EMPTY MONGO_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD:?EMPTY MONGO_ROOT_PASSWORD}"
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $MONGO_ROOT_USERNAME -p $MONGO_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
  log-consumer:
    image: consumer
    build: ./log-consumer
    depends_on:
      - proxy
    environment:
      KAFKA_BROKERS: "${KAFKA_BROKERS:?EMPTY KAFKA_BROKERS}"
      KAFKA_TOPIC: "${KAFKA_TOPIC:?EMPTY KAFKA_TOPIC}"
  proxy:
    image: proxy
    build: ./frontProxy
    depends_on:
      main:
        condition: service_started
      calculator:
        condition: service_started
      kafka0:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      MAIN_SERVICE_ADDRESS: "main:8085"
      CALCULATOR_SERVICE_ADDRESS: "calculator:8090"
      KAFKA_BROKERS: "${KAFKA_BROKERS:?EMPTY KAFKA_BROKERS}"
      KAFKA_TOPIC: "${KAFKA_TOPIC:?EMPTY KAFKA_TOPIC}"

  main:
    image: task-manager
    build: ./main
    depends_on:
      mongoDB:
        condition: service_healthy
    ports:
      - "8085:8085"
    environment:
      MONGODB_URI : "mongodb://${MONGO_ROOT_USERNAME:?EMPTY MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD:?EMPTY MONGO_ROOT_PASSWORD}@mongoDB:27017/"


  calculator:
    image: calculator
    build: ./calculator
    depends_on:
      mongoDB:
        condition: service_healthy
    environment:
      MONGODB_URI: "mongodb://${MONGO_ROOT_USERNAME:?EMPTY MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD:?EMPTY MONGO_ROOT_PASSWORD}@mongoDB:27017/"
      REDIS_ADDRESS: "redis:6379"
    ports:
      - "8090:8090"


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka0:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:9092,PLAINTEXT_HOST1://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 15s
      timeout: 10s
      retries: 5

  kafka1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093,PLAINTEXT_HOST1://kafka:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
    healthcheck:
      test: nc -z localhost 9093 || exit -1
      interval: 15s
      timeout: 10s
      retries: 5

  kafka2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094,PLAINTEXT_HOST1://kafka:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
    healthcheck:
      test: nc -z localhost 9094 || exit -1
      interval: 15s
      timeout: 10s
      retries: 5
